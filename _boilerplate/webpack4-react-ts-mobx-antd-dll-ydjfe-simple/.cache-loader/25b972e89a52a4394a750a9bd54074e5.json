{"remainingRequest":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\thread-loader\\dist\\cjs.js??ref--7-1!E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\babel-loader\\lib\\index.js??ref--7-2!E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\src\\containers\\views\\SocketDebugger\\Browse\\index.tsx","dependencies":[{"path":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\src\\containers\\views\\SocketDebugger\\Browse\\index.tsx","mtime":1557549177000},{"path":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558612017300},{"path":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1550204147052},{"path":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\babel-loader\\lib\\index.js","mtime":1557710044686}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:KGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykgeyB0cnkgeyB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7IHZhciB2YWx1ZSA9IGluZm8udmFsdWU7IH0gY2F0Y2ggKGVycm9yKSB7IHJlamVjdChlcnJvcik7IHJldHVybjsgfSBpZiAoaW5mby5kb25lKSB7IHJlc29sdmUodmFsdWUpOyB9IGVsc2UgeyBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oX25leHQsIF90aHJvdyk7IH0gfQoKZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIHNlbGYgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzOyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgeyB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7IGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgIm5leHQiLCB2YWx1ZSk7IH0gZnVuY3Rpb24gX3Rocm93KGVycikgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJ0aHJvdyIsIGVycik7IH0gX25leHQodW5kZWZpbmVkKTsgfSk7IH07IH0KCmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IHsgaW5qZWN0IH0gZnJvbSAnbW9ieC1yZWFjdCc7CmltcG9ydCB7IG9ic2VydmVyLCB1c2VEaXNwb3NhYmxlIH0gZnJvbSAnbW9ieC1yZWFjdC1saXRlJzsKaW1wb3J0IHsgcmVhY3Rpb24gfSBmcm9tICdtb2J4JzsKaW1wb3J0IHsgQXV0b1NpemVyIH0gZnJvbSAncmVhY3QtdmlydHVhbGl6ZWQvZGlzdC9lcy9BdXRvU2l6ZXInOwppbXBvcnQgeyBDZWxsTWVhc3VyZXJDYWNoZSwgQ2VsbE1lYXN1cmVyIH0gZnJvbSAncmVhY3QtdmlydHVhbGl6ZWQvZGlzdC9lcy9DZWxsTWVhc3VyZXInOwppbXBvcnQgeyBMaXN0IGFzIFZMaXN0IH0gZnJvbSAncmVhY3QtdmlydHVhbGl6ZWQvZGlzdC9lcy9MaXN0JzsKaW1wb3J0ICogYXMgc3R5bGVzIGZyb20gJy4vaW5kZXguc2Nzcyc7CmltcG9ydCBNZXNzYWdlIGZyb20gJy4vTWVzc2FnZSc7CgpmdW5jdGlvbiBCcm93c2UoX3JlZikgewogIHZhciBtZXNzYWdlcyA9IF9yZWYubWVzc2FnZXM7CiAgdmFyIHZMaXN0ID0gUmVhY3QudXNlUmVmKG51bGwpOwogIHZhciBtZWFzdXJlQ2FjaGUgPSBuZXcgQ2VsbE1lYXN1cmVyQ2FjaGUoewogICAgZml4ZWRXaWR0aDogdHJ1ZSwKICAgIG1pbkhlaWdodDogNDMKICB9KTsKCiAgZnVuY3Rpb24gc2xlZXAoKSB7CiAgICByZXR1cm4gX3NsZWVwLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBmdW5jdGlvbiBfc2xlZXAoKSB7CiAgICBfc2xlZXAgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgIC8qI19fUFVSRV9fKi8KICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBtcywKICAgICAgICAgIF9hcmdzID0gYXJndW1lbnRzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgbXMgPSBfYXJncy5sZW5ndGggPiAwICYmIF9hcmdzWzBdICE9PSB1bmRlZmluZWQgPyBfYXJnc1swXSA6IDEwOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgICAgICAgICAgfSwgbXMpOwogICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSk7CiAgICByZXR1cm4gX3NsZWVwLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBmdW5jdGlvbiBzY3JvbGxUb1JvdyhfeCkgewogICAgcmV0dXJuIF9zY3JvbGxUb1Jvdy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH0KCiAgZnVuY3Rpb24gX3Njcm9sbFRvUm93KCkgewogICAgX3Njcm9sbFRvUm93ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAvKiNfX1BVUkVfXyovCiAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihyb3dJbmRleCkgewogICAgICB2YXIgYXJyLCBpOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmIChyb3dJbmRleCA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgICByb3dJbmRleCA9IG1lc3NhZ2VzLmxlbmd0aCAtIDE7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBhcnIgPSBuZXcgQXJyYXkoMykuZmlsbCgwKTsKICAgICAgICAgICAgICBpID0gMDsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBpZiAoIShpIDwgYXJyLmxlbmd0aCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGlmICghKGkgIT09IDApKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNzsKICAgICAgICAgICAgICByZXR1cm4gc2xlZXAoKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBpZiAodkxpc3QpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoImJyZWFrIiwgMTMpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIHZMaXN0LmN1cnJlbnQuc2Nyb2xsVG9Sb3cocm93SW5kZXgpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBpKys7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKTsKICAgIHJldHVybiBfc2Nyb2xsVG9Sb3cuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9CgogIHVzZURpc3Bvc2FibGUoZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHJlYWN0aW9uKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIG1lc3NhZ2VzLmxlbmd0aDsKICAgIH0sIGZ1bmN0aW9uIChtZXNzYWdlc0xlbmd0aCkgewogICAgICBpZiAobWVzc2FnZXNMZW5ndGggPT09IDApIHsKICAgICAgICByZXR1cm4gbWVhc3VyZUNhY2hlLmNsZWFyQWxsKCk7CiAgICAgIH0KCiAgICAgIHNjcm9sbFRvUm93KCk7CiAgICB9KTsKICB9KTsKCiAgZnVuY3Rpb24gcmVuZGVySXRlbShfcmVmMikgewogICAgdmFyIGluZGV4ID0gX3JlZjIuaW5kZXgsCiAgICAgICAga2V5ID0gX3JlZjIua2V5LAogICAgICAgIHBhcmVudCA9IF9yZWYyLnBhcmVudCwKICAgICAgICBzdHlsZSA9IF9yZWYyLnN0eWxlOwogICAgdmFyIGl0ZW0gPSBtZXNzYWdlcy5zbGljZSgpW2luZGV4XTsKICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENlbGxNZWFzdXJlciwgewogICAgICBjYWNoZTogbWVhc3VyZUNhY2hlLAogICAgICBjb2x1bW5JbmRleDogMCwKICAgICAga2V5OiBrZXksCiAgICAgIHBhcmVudDogcGFyZW50LAogICAgICByb3dJbmRleDogaW5kZXgKICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTWVzc2FnZSwgewogICAgICBzdHlsZTogc3R5bGUsCiAgICAgIG1lc3NhZ2U6IGl0ZW0KICAgIH0pKTsKICB9CgogIHZhciByb3dDb3VudCA9IG1lc3NhZ2VzLmxlbmd0aDsKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgY2xhc3NOYW1lOiBzdHlsZXMuYnJvd3NlCiAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChBdXRvU2l6ZXIsIG51bGwsIGZ1bmN0aW9uIChfcmVmMykgewogICAgdmFyIHdpZHRoID0gX3JlZjMud2lkdGgsCiAgICAgICAgaGVpZ2h0ID0gX3JlZjMuaGVpZ2h0OwogICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVkxpc3QsIHsKICAgICAgd2lkdGg6IHdpZHRoLAogICAgICBoZWlnaHQ6IGhlaWdodCwKICAgICAgcmVmOiB2TGlzdCwKICAgICAgb3ZlcnNjYW5Sb3dDb3VudDogMCwKICAgICAgcm93Q291bnQ6IHJvd0NvdW50LAogICAgICBkZWZlcnJlZE1lYXN1cmVtZW50Q2FjaGU6IG1lYXN1cmVDYWNoZSwKICAgICAgcm93SGVpZ2h0OiBtZWFzdXJlQ2FjaGUucm93SGVpZ2h0LAogICAgICByb3dSZW5kZXJlcjogcmVuZGVySXRlbQogICAgfSk7CiAgfSkpOwp9Cgp2YXIgX2RlZmF1bHQgPSBpbmplY3QoZnVuY3Rpb24gKHN0b3JlKSB7CiAgcmV0dXJuIHsKICAgIG1lc3NhZ2VzOiBzdG9yZS5zb2NrZXRTdG9yZS5tZXNzYWdlcwogIH07Cn0pKG9ic2VydmVyKEJyb3dzZSkpOwoKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoQnJvd3NlLCAiQnJvd3NlIiwgIkU6XFx3b3Jrc3BhY2UtbXlzZWxmXFxuYXR1cmFsLWNsaS10eXBlc2NyaXB0XFx3ZWJwYWNrNC1yZWFjdC10cy1tb2J4LWFudGQteWRqZmVcXHNyY1xcY29udGFpbmVyc1xcdmlld3NcXFNvY2tldERlYnVnZ2VyXFxCcm93c2VcXGluZGV4LnRzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9kZWZhdWx0LCAiZGVmYXVsdCIsICJFOlxcd29ya3NwYWNlLW15c2VsZlxcbmF0dXJhbC1jbGktdHlwZXNjcmlwdFxcd2VicGFjazQtcmVhY3QtdHMtbW9ieC1hbnRkLXlkamZlXFxzcmNcXGNvbnRhaW5lcnNcXHZpZXdzXFxTb2NrZXREZWJ1Z2dlclxcQnJvd3NlXFxpbmRleC50c3giKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\src\\containers\\views\\SocketDebugger\\Browse\\index.tsx"],"names":["React","inject","observer","useDisposable","reaction","AutoSizer","CellMeasurerCache","CellMeasurer","List","VList","styles","Message","Browse","messages","vList","useRef","measureCache","fixedWidth","minHeight","sleep","ms","Promise","resolve","setTimeout","scrollToRow","rowIndex","undefined","length","arr","Array","fill","i","current","messagesLength","clearAll","renderItem","index","key","parent","style","item","slice","rowCount","browse","width","height","rowHeight","store","socketStore"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { inject } from 'mobx-react'\nimport { observer, useDisposable } from 'mobx-react-lite'\nimport { reaction } from 'mobx'\nimport { AutoSizer } from 'react-virtualized/dist/es/AutoSizer'\nimport { CellMeasurerCache, CellMeasurer } from 'react-virtualized/dist/es/CellMeasurer'\nimport { List as VList } from 'react-virtualized/dist/es/List'\n\nimport * as styles from './index.scss'\nimport Message from './Message'\n\ninterface IStoreProps {\n    messages?: ISocketStore.Message[]\n}\n\nfunction Browse({ messages }: IStoreProps) {\n    const vList = React.useRef<VList>(null)\n    const measureCache = new CellMeasurerCache({\n        fixedWidth: true,\n        minHeight: 43\n    })\n\n    async function sleep(ms = 10): Promise<any> {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve()\n            }, ms)\n        })\n    }\n\n    async function scrollToRow(rowIndex?: number): Promise<any> {\n        if (rowIndex === undefined) {\n            rowIndex = messages.length - 1\n        }\n        const arr = new Array(3).fill(0)\n        for (let i = 0; i < arr.length; i++) {\n            if (i !== 0) {\n                await sleep()\n            }\n            if (!vList) {\n                break\n            }\n            vList.current.scrollToRow(rowIndex)\n        }\n    }\n\n    useDisposable(() =>\n        reaction(\n            () => messages.length,\n            messagesLength => {\n                if (messagesLength === 0) {\n                    return measureCache.clearAll()\n                }\n                scrollToRow()\n            }\n        )\n    )\n\n    function renderItem({ index, key, parent, style }) {\n        const item = messages.slice()[index]\n        return (\n            <CellMeasurer cache={measureCache} columnIndex={0} key={key} parent={parent} rowIndex={index}>\n                <Message style={style} message={item} />\n            </CellMeasurer>\n        )\n    }\n    const rowCount = messages.length\n    return (\n        <div className={styles.browse}>\n            <AutoSizer>\n                {({ width, height }) => (\n                    <VList\n                        width={width}\n                        height={height}\n                        ref={vList}\n                        overscanRowCount={0}\n                        rowCount={rowCount}\n                        deferredMeasurementCache={measureCache}\n                        rowHeight={measureCache.rowHeight}\n                        rowRenderer={renderItem}\n                    />\n                )}\n            </AutoSizer>\n        </div>\n    )\n}\n\nexport default inject((store: IStore): IStoreProps => ({ messages: store.socketStore.messages }))(observer(Browse))\n"]}]}