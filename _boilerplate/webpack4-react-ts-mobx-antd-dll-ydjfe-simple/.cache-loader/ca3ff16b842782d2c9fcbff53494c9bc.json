{"remainingRequest":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\thread-loader\\dist\\cjs.js??ref--7-1!E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\babel-loader\\lib\\index.js??ref--7-2!E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\src\\utils\\reactExt.tsx","dependencies":[{"path":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\src\\utils\\reactExt.tsx","mtime":1557549177000},{"path":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558612017300},{"path":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1550204147052},{"path":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\babel-loader\\lib\\index.js","mtime":1557710044686}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJhbnRkL2xpYi9ub3RpZmljYXRpb24vc3R5bGUiOwppbXBvcnQgX25vdGlmaWNhdGlvbiBmcm9tICJhbnRkL2xpYi9ub3RpZmljYXRpb24iOwppbXBvcnQgImFudGQvbGliL21lc3NhZ2Uvc3R5bGUiOwppbXBvcnQgX21lc3NhZ2UgZnJvbSAiYW50ZC9saWIvbWVzc2FnZSI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7CgpmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSAic3ltYm9sIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH0KCmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uIik7IH0gfQoKZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoInZhbHVlIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0KCmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09ICJmdW5jdGlvbiIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH0KCmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9CgppbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCAqIGFzIGFwaSBmcm9tICdAc2VydmljZXMvYXBpJzsKLyoqCiAqIGV4dGVuZHMgY29tcG9uZW50CiAqCiAqIEBleHBvcnQKICogQGNsYXNzIENvbXBvbmVudEV4dAogKiBAZXh0ZW5kcyB7UmVhY3QuQ29tcG9uZW50PFAsIFM+fQogKiBAdGVtcGxhdGUgUAogKiBAdGVtcGxhdGUgUwogKi8KCmV4cG9ydCB2YXIgQ29tcG9uZW50RXh0ID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkgewogIF9pbmhlcml0cyhDb21wb25lbnRFeHQsIF9SZWFjdCRDb21wb25lbnQpOwoKICBmdW5jdGlvbiBDb21wb25lbnRFeHQoKSB7CiAgICB2YXIgX2dldFByb3RvdHlwZU9mMjsKCiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvbXBvbmVudEV4dCk7CgogICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7CiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICB9CgogICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoX2dldFByb3RvdHlwZU9mMiA9IF9nZXRQcm90b3R5cGVPZihDb21wb25lbnRFeHQpKS5jYWxsLmFwcGx5KF9nZXRQcm90b3R5cGVPZjIsIFt0aGlzXS5jb25jYXQoYXJncykpKTsKICAgIF90aGlzLmFwaSA9IGFwaTsKICAgIF90aGlzLiRtZXNzYWdlID0gX21lc3NhZ2U7CiAgICBfdGhpcy4kbm90aWZpY2F0aW9uID0gX25vdGlmaWNhdGlvbjsKICAgIHJldHVybiBfdGhpczsKICB9CgogIF9jcmVhdGVDbGFzcyhDb21wb25lbnRFeHQsIFt7CiAgICBrZXk6ICJfX3JlYWN0c3RhbmRpbl9fcmVnZW5lcmF0ZUJ5RXZhbCIsCiAgICAvLyBAdHMtaWdub3JlCiAgICB2YWx1ZTogZnVuY3Rpb24gX19yZWFjdHN0YW5kaW5fX3JlZ2VuZXJhdGVCeUV2YWwoa2V5LCBjb2RlKSB7CiAgICAgIC8vIEB0cy1pZ25vcmUKICAgICAgdGhpc1trZXldID0gZXZhbChjb2RlKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBDb21wb25lbnRFeHQ7Cn0oUmVhY3QuQ29tcG9uZW50KTsKLyoqCiAqIGV4dGVuZHMgc3RvcmUKICoKICogQGV4cG9ydAogKiBAY2xhc3MgU3RvcmVFeHQKICovCgpleHBvcnQgdmFyIFN0b3JlRXh0ID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gU3RvcmVFeHQoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3RvcmVFeHQpOwoKICAgIHRoaXMuYXBpID0gYXBpOwogICAgdGhpcy4kbWVzc2FnZSA9IF9tZXNzYWdlOwogICAgdGhpcy4kbm90aWZpY2F0aW9uID0gX25vdGlmaWNhdGlvbjsKICB9CgogIF9jcmVhdGVDbGFzcyhTdG9yZUV4dCwgW3sKICAgIGtleTogIl9fcmVhY3RzdGFuZGluX19yZWdlbmVyYXRlQnlFdmFsIiwKICAgIC8vIEB0cy1pZ25vcmUKICAgIHZhbHVlOiBmdW5jdGlvbiBfX3JlYWN0c3RhbmRpbl9fcmVnZW5lcmF0ZUJ5RXZhbChrZXksIGNvZGUpIHsKICAgICAgLy8gQHRzLWlnbm9yZQogICAgICB0aGlzW2tleV0gPSBldmFsKGNvZGUpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFN0b3JlRXh0Owp9KCk7Ci8qKgogKiBjb21wb25lbnREaWRNb3VudCBpbiBob29rIHdheQogKgogKiBAZXhwb3J0CiAqIEBwYXJhbSB7KCkgPT4gYW55fSBvbk1vdW50CiAqIEByZXR1cm5zCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHVzZU9uTW91bnQob25Nb3VudCkgewogIHJldHVybiBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkgewogICAgaWYgKG9uTW91bnQpIHsKICAgICAgb25Nb3VudCgpOwogICAgfQogIH0sIFtdKTsKfQovKioKICogY29tcG9uZW50V2lsbFVubW91bnQgaW4gaG9vayB3YXkKICoKICogQGV4cG9ydAogKiBAcGFyYW0geygpID0+IGFueX0gb25Vbm1vdW50CiAqIEByZXR1cm5zCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHVzZU9uVW5tb3VudChvblVubW91bnQpIHsKICByZXR1cm4gUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBvblVubW91bnQgJiYgb25Vbm1vdW50KCk7CiAgICB9OwogIH0sIFtdKTsKfQo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKENvbXBvbmVudEV4dCwgIkNvbXBvbmVudEV4dCIsICJFOlxcd29ya3NwYWNlLW15c2VsZlxcbmF0dXJhbC1jbGktdHlwZXNjcmlwdFxcd2VicGFjazQtcmVhY3QtdHMtbW9ieC1hbnRkLXlkamZlXFxzcmNcXHV0aWxzXFxyZWFjdEV4dC50c3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihTdG9yZUV4dCwgIlN0b3JlRXh0IiwgIkU6XFx3b3Jrc3BhY2UtbXlzZWxmXFxuYXR1cmFsLWNsaS10eXBlc2NyaXB0XFx3ZWJwYWNrNC1yZWFjdC10cy1tb2J4LWFudGQteWRqZmVcXHNyY1xcdXRpbHNcXHJlYWN0RXh0LnRzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKHVzZU9uTW91bnQsICJ1c2VPbk1vdW50IiwgIkU6XFx3b3Jrc3BhY2UtbXlzZWxmXFxuYXR1cmFsLWNsaS10eXBlc2NyaXB0XFx3ZWJwYWNrNC1yZWFjdC10cy1tb2J4LWFudGQteWRqZmVcXHNyY1xcdXRpbHNcXHJlYWN0RXh0LnRzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKHVzZU9uVW5tb3VudCwgInVzZU9uVW5tb3VudCIsICJFOlxcd29ya3NwYWNlLW15c2VsZlxcbmF0dXJhbC1jbGktdHlwZXNjcmlwdFxcd2VicGFjazQtcmVhY3QtdHMtbW9ieC1hbnRkLXlkamZlXFxzcmNcXHV0aWxzXFxyZWFjdEV4dC50c3giKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\src\\utils\\reactExt.tsx"],"names":["React","api","ComponentExt","$message","$notification","Component","StoreExt","useOnMount","onMount","useEffect","useOnUnmount","onUnmount"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAO,KAAKC,GAAZ,MAAqB,eAArB;AAEA;;;;;;;;;;AASA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACaD,GADb,GACmBA,GADnB;AAAA,UAEaE,QAFb;AAAA,UAGaC,aAHb;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAkDJ,KAAK,CAACK,SAAxD;AAMA;;;;;;;AAMA,WAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;;AAAA,SACaL,GADb,GACmBA,GADnB;AAAA,SAEaE,QAFb;AAAA,SAGaC,aAHb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMA;;;;;;;;AAOA,OAAO,SAASG,UAAT,CAAoBC,OAApB,EAAwC;AAC3C,SAAOR,KAAK,CAACS,SAAN,CAAgB,YAAM;AACzB,QAAID,OAAJ,EAAa;AACTA,MAAAA,OAAO;AACV;AACJ,GAJM,EAIJ,EAJI,CAAP;AAKH;AAED;;;;;;;;AAOA,OAAO,SAASE,YAAT,CAAsBC,SAAtB,EAA4C;AAC/C,SAAOX,KAAK,CAACS,SAAN,CAAgB,YAAM;AACzB,WAAO;AAAA,aAAME,SAAS,IAAIA,SAAS,EAA5B;AAAA,KAAP;AACH,GAFM,EAEJ,EAFI,CAAP;AAGH;;;;;;;;;;0BA5CYT,Y;0BAYAI,Q;0BAaGC,U;0BAeAG,Y","sourcesContent":["import * as React from 'react'\nimport { message, notification } from 'antd'\n\nimport * as api from '@services/api'\n\n/**\n * extends component\n *\n * @export\n * @class ComponentExt\n * @extends {React.Component<P, S>}\n * @template P\n * @template S\n */\nexport class ComponentExt<P = {}, S = {}> extends React.Component<P, S> {\n    readonly api = api\n    readonly $message = message\n    readonly $notification = notification\n}\n\n/**\n * extends store\n *\n * @export\n * @class StoreExt\n */\nexport class StoreExt {\n    readonly api = api\n    readonly $message = message\n    readonly $notification = notification\n}\n\n/**\n * componentDidMount in hook way\n *\n * @export\n * @param {() => any} onMount\n * @returns\n */\nexport function useOnMount(onMount: () => any) {\n    return React.useEffect(() => {\n        if (onMount) {\n            onMount()\n        }\n    }, [])\n}\n\n/**\n * componentWillUnmount in hook way\n *\n * @export\n * @param {() => any} onUnmount\n * @returns\n */\nexport function useOnUnmount(onUnmount: () => any) {\n    return React.useEffect(() => {\n        return () => onUnmount && onUnmount()\n    }, [])\n}\n"]}]}