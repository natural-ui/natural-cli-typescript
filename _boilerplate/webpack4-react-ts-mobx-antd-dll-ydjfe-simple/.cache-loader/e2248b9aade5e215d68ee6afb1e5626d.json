{"remainingRequest":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\thread-loader\\dist\\cjs.js??ref--7-1!E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\babel-loader\\lib\\index.js??ref--7-2!E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\src\\containers\\views\\Home\\Sider\\Menu.tsx","dependencies":[{"path":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\src\\containers\\views\\Home\\Sider\\Menu.tsx","mtime":1557549177000},{"path":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558612017300},{"path":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1550204147052},{"path":"E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\node_modules\\babel-loader\\lib\\index.js","mtime":1557710044686}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:\\workspace-myself\\natural-cli-typescript\\webpack4-react-ts-mobx-antd-ydjfe\\src\\containers\\views\\Home\\Sider\\Menu.tsx"],"names":["React","observer","inject","computed","pathToRegexp","styles","menu","arrayToTree","queryArray","SubMenu","SiderMenu","store","routerStore","globalStore","authStore","userInfo","sideBarTheme","sideBarCollapsed","navOpenKeys","setOpenKeys","levelMap","goto","key","history","props","selectedMenu","find","item","String","id","path","currentRoute","push","onOpenChange","openKeys","latestOpenKey","includes","latestCloseKey","nextOpenKeys","getAncestorKeys","concat","getPathArray","array","current","result","getPath","pid","unshift","map","getParent","index","hasOwnProperty","call","getMenus","menuTree","children","icon","title","menuItems","currentMenu","exec","selectedKeys","menuProps","location","pathname","Component"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { observer, inject } from 'mobx-react'\nimport { computed } from 'mobx'\nimport { Menu, Icon } from 'antd'\nimport pathToRegexp from 'path-to-regexp'\n\nimport * as styles from './index.scss'\nimport menu, { IMenu, IMenuInTree } from './../menu'\nimport { arrayToTree, queryArray } from '@utils/index'\n\nconst { SubMenu } = Menu\n\ninterface IStoreProps {\n    sideBarCollapsed?: boolean\n    sideBarTheme?: IGlobalStore.SideBarTheme\n    navOpenKeys?: string[]\n    setOpenKeys?: (openKeys: string[]) => void\n    userInfo?: IAuthStore.UserInfo\n    routerStore?: RouterStore\n}\n\n@inject(\n    (store: IStore): IStoreProps => {\n        const { routerStore, globalStore, authStore } = store\n        const { userInfo } = authStore\n        const { sideBarTheme, sideBarCollapsed, navOpenKeys, setOpenKeys } = globalStore\n        return {\n            routerStore,\n            userInfo,\n            sideBarTheme,\n            sideBarCollapsed,\n            navOpenKeys,\n            setOpenKeys\n        }\n    }\n)\n@observer\nclass SiderMenu extends React.Component<IStoreProps> {\n    // 打开的菜单层级记录\n    private levelMap: NumberObject = {}\n\n    @computed\n    get currentRoute() {\n        return this.props.routerStore.location.pathname\n    }\n\n    @computed\n    get menuTree() {\n        return arrayToTree<IMenuInTree>(menu, 'id', 'pid')\n    }\n\n    @computed\n    get menuProps() {\n        const { sideBarCollapsed, navOpenKeys } = this.props\n        return !sideBarCollapsed\n            ? {\n                  onOpenChange: this.onOpenChange,\n                  openKeys: navOpenKeys\n              }\n            : {}\n    }\n\n    goto = ({ key }: { key: string }) => {\n        const { history } = this.props.routerStore\n        const selectedMenu = menu.find(item => String(item.id) === key)\n        if (selectedMenu && selectedMenu.path && selectedMenu.path !== this.currentRoute) {\n            history.push(selectedMenu.path)\n        }\n    }\n\n    onOpenChange = (openKeys: string[]): void => {\n        const { navOpenKeys, setOpenKeys } = this.props\n        const latestOpenKey = openKeys.find(key => !navOpenKeys.includes(key))\n        const latestCloseKey = navOpenKeys.find(key => !openKeys.includes(key))\n        let nextOpenKeys = []\n        if (latestOpenKey) {\n            nextOpenKeys = this.getAncestorKeys(latestOpenKey).concat(latestOpenKey)\n        }\n        if (latestCloseKey) {\n            nextOpenKeys = this.getAncestorKeys(latestCloseKey)\n        }\n        setOpenKeys(nextOpenKeys)\n    }\n\n    getPathArray = (array: IMenu[], current: IMenu): string[] => {\n        const result = [String(current.id)]\n        const getPath = (item: IMenu): void => {\n            if (item && item.pid) {\n                result.unshift(String(item.pid))\n                getPath(queryArray(array, String(item.pid), 'id'))\n            }\n        }\n        getPath(current)\n        return result\n    }\n\n    // 保持选中\n    getAncestorKeys = (key: string): string[] => {\n        const map = {}\n        const getParent = index => {\n            const result = [String(this.levelMap[index])]\n            if (this.levelMap[result[0]]) {\n                result.unshift(getParent(result[0])[0])\n            }\n            return result\n        }\n        for (const index in this.levelMap) {\n            if ({}.hasOwnProperty.call(this.levelMap, index)) {\n                map[index] = getParent(index)\n            }\n        }\n        return map[key] || []\n    }\n\n    // 递归生成菜单\n    getMenus = (menuTree: IMenuInTree[]) => {\n        return menuTree.map(item => {\n            if (item.children) {\n                if (item.pid) {\n                    this.levelMap[item.id] = item.pid\n                }\n                return (\n                    <SubMenu\n                        key={String(item.id)}\n                        title={\n                            <span>\n                                {item.icon && <Icon type={item.icon} />}\n                                <span>{item.title}</span>\n                            </span>\n                        }\n                    >\n                        {this.getMenus(item.children)}\n                    </SubMenu>\n                )\n            }\n            return (\n                <Menu.Item key={String(item.id)}>\n                    {item.icon && <Icon type={item.icon} />}\n                    <span>{item.title}</span>\n                </Menu.Item>\n            )\n        })\n    }\n\n    render() {\n        this.levelMap = {}\n        const { sideBarTheme } = this.props\n        const menuItems = this.getMenus(this.menuTree)\n        // 寻找选中路由\n        let currentMenu: IMenu = null\n        for (const item of menu) {\n            if (item.path && pathToRegexp(item.path).exec(this.currentRoute)) {\n                currentMenu = item\n                break\n            }\n        }\n        let selectedKeys: string[] = null\n        if (currentMenu) {\n            selectedKeys = this.getPathArray(menu, currentMenu)\n        }\n        if (!selectedKeys) {\n            selectedKeys = ['1']\n        }\n        return (\n            <Menu\n                className={styles.menu}\n                theme={sideBarTheme}\n                mode=\"inline\"\n                selectedKeys={selectedKeys}\n                onClick={this.goto}\n                {...this.menuProps}\n            >\n                {menuItems}\n            </Menu>\n        )\n    }\n}\n\nexport default SiderMenu\n"]}]}